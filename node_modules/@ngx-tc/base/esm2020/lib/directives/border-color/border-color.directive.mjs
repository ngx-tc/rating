import { Directive, HostBinding, HostListener, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class BorderColorDirective {
    get class() {
        return 'custom-border-color';
    }
    ;
    ngOnInit() {
        const COLOR = this.tcBorderColor;
        this.defaultColor = (typeof COLOR === 'string') ? COLOR : COLOR[0];
        this.hoveredColor = (typeof COLOR === 'string') ? COLOR : COLOR[1];
        this.currentColor = this.defaultColor;
    }
    get getStyle() {
        return this.currentColor;
    }
    onMouseEnter() {
        this.currentColor = this.hoveredColor;
    }
    onMouseLeave() {
        this.currentColor = this.defaultColor;
    }
}
BorderColorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BorderColorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
BorderColorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.3", type: BorderColorDirective, selector: "[tcBorderColor]", inputs: { tcBorderColor: "tcBorderColor" }, host: { listeners: { "mouseenter": "onMouseEnter()", "mouseleave": "onMouseLeave()" }, properties: { "class": "this.class", "style.borderColor": "this.getStyle" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BorderColorDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tcBorderColor]'
                }]
        }], propDecorators: { class: [{
                type: HostBinding,
                args: ['class']
            }], tcBorderColor: [{
                type: Input
            }], getStyle: [{
                type: HostBinding,
                args: ['style.borderColor']
            }], onMouseEnter: [{
                type: HostListener,
                args: ['mouseenter']
            }], onMouseLeave: [{
                type: HostListener,
                args: ['mouseleave']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9yZGVyLWNvbG9yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC10Yy9iYXNlL3NyYy9saWIvZGlyZWN0aXZlcy9ib3JkZXItY29sb3IvYm9yZGVyLWNvbG9yLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDOztBQUtwRixNQUFNLE9BQU8sb0JBQW9CO0lBQy9CLElBQTBCLEtBQUs7UUFDN0IsT0FBTyxxQkFBcUIsQ0FBQztJQUMvQixDQUFDO0lBQUEsQ0FBQztJQU1GLFFBQVE7UUFDTixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBRWpDLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFBLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDeEMsQ0FBQztJQUVELElBQXNDLFFBQVE7UUFDNUMsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7SUFFMkIsWUFBWTtRQUN0QyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDeEMsQ0FBQztJQUMyQixZQUFZO1FBQ3RDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUN4QyxDQUFDOztpSEExQlUsb0JBQW9CO3FHQUFwQixvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFIaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2lCQUM1Qjs4QkFFMkIsS0FBSztzQkFBOUIsV0FBVzt1QkFBQyxPQUFPO2dCQUdYLGFBQWE7c0JBQXJCLEtBQUs7Z0JBYWdDLFFBQVE7c0JBQTdDLFdBQVc7dUJBQUMsbUJBQW1CO2dCQUlKLFlBQVk7c0JBQXZDLFlBQVk7dUJBQUMsWUFBWTtnQkFHRSxZQUFZO3NCQUF2QyxZQUFZO3VCQUFDLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3RjQm9yZGVyQ29sb3JdJ1xufSlcbmV4cG9ydCBjbGFzcyBCb3JkZXJDb2xvckRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBIb3N0QmluZGluZygnY2xhc3MnKSBnZXQgY2xhc3MoKSB7XG4gICAgcmV0dXJuICdjdXN0b20tYm9yZGVyLWNvbG9yJztcbiAgfTtcbiAgQElucHV0KCkgdGNCb3JkZXJDb2xvcjogc3RyaW5nIHwgc3RyaW5nW107XG4gIGN1cnJlbnRDb2xvcjogc3RyaW5nO1xuICBkZWZhdWx0Q29sb3I6IHN0cmluZztcbiAgaG92ZXJlZENvbG9yOiBzdHJpbmc7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc3QgQ09MT1IgPSB0aGlzLnRjQm9yZGVyQ29sb3I7XG5cbiAgICB0aGlzLmRlZmF1bHRDb2xvciA9ICh0eXBlb2YgQ09MT1IgPT09ICdzdHJpbmcnKSA/IENPTE9SOiBDT0xPUlswXTtcbiAgICB0aGlzLmhvdmVyZWRDb2xvciA9ICh0eXBlb2YgQ09MT1IgPT09ICdzdHJpbmcnKSA/IENPTE9SOiBDT0xPUlsxXTtcbiAgICB0aGlzLmN1cnJlbnRDb2xvciA9IHRoaXMuZGVmYXVsdENvbG9yO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS5ib3JkZXJDb2xvcicpIGdldCBnZXRTdHlsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50Q29sb3I7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdtb3VzZWVudGVyJykgb25Nb3VzZUVudGVyKCkge1xuICAgIHRoaXMuY3VycmVudENvbG9yID0gdGhpcy5ob3ZlcmVkQ29sb3I7XG4gIH1cbiAgQEhvc3RMaXN0ZW5lcignbW91c2VsZWF2ZScpIG9uTW91c2VMZWF2ZSgpIHtcbiAgICB0aGlzLmN1cnJlbnRDb2xvciA9IHRoaXMuZGVmYXVsdENvbG9yO1xuICB9XG59XG4iXX0=