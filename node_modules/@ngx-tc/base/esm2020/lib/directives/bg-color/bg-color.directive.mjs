import { Directive, Input, HostBinding, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
export class BgColorDirective {
    get class() {
        return 'custom-bg-color';
    }
    ;
    get getStyle() {
        return this.currentBg;
    }
    onMouseEnter() {
        this.currentBg = this.hoveredBg;
    }
    onMouseLeave() {
        this.currentBg = this.defaultBg;
    }
    ngOnInit() {
        this.setColors();
    }
    ngOnChanges() {
        this.setColors();
    }
    setColors() {
        const BG_COLOR = this.tcBgColor;
        if (!BG_COLOR)
            return null;
        this.defaultBg = (typeof BG_COLOR === 'string') ? BG_COLOR : BG_COLOR[0];
        this.hoveredBg = (typeof BG_COLOR === 'string') ? BG_COLOR : BG_COLOR[1];
        this.currentBg = this.defaultBg;
    }
}
BgColorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BgColorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
BgColorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.3", type: BgColorDirective, selector: "[tcBgColor]", inputs: { tcBgColor: "tcBgColor" }, host: { listeners: { "mouseenter": "onMouseEnter()", "mouseleave": "onMouseLeave()" }, properties: { "class": "this.class", "style.background": "this.getStyle" } }, usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BgColorDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tcBgColor]'
                }]
        }], propDecorators: { class: [{
                type: HostBinding,
                args: ['class']
            }], getStyle: [{
                type: HostBinding,
                args: ['style.background']
            }], onMouseEnter: [{
                type: HostListener,
                args: ['mouseenter']
            }], onMouseLeave: [{
                type: HostListener,
                args: ['mouseleave']
            }], tcBgColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmctY29sb3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRjL2Jhc2Uvc3JjL2xpYi9kaXJlY3RpdmVzL2JnLWNvbG9yL2JnLWNvbG9yLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFhLE1BQU0sZUFBZSxDQUFDOztBQUsvRixNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLElBQTBCLEtBQUs7UUFDN0IsT0FBTyxpQkFBaUIsQ0FBQztJQUMzQixDQUFDO0lBQUEsQ0FBQztJQUNGLElBQXFDLFFBQVE7UUFDM0MsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFFMkIsWUFBWTtRQUN0QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDbEMsQ0FBQztJQUMyQixZQUFZO1FBQ3RDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNsQyxDQUFDO0lBUUQsUUFBUTtRQUNOLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsU0FBUztRQUNQLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFaEMsSUFBSSxDQUFDLFFBQVE7WUFBRSxPQUFPLElBQUksQ0FBQztRQUUzQixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsT0FBTyxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hFLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxPQUFPLFFBQVEsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFBLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ2xDLENBQUM7OzZHQXJDVSxnQkFBZ0I7aUdBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUg1QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO2lCQUN4Qjs4QkFFMkIsS0FBSztzQkFBOUIsV0FBVzt1QkFBQyxPQUFPO2dCQUdpQixRQUFRO3NCQUE1QyxXQUFXO3VCQUFDLGtCQUFrQjtnQkFJSCxZQUFZO3NCQUF2QyxZQUFZO3VCQUFDLFlBQVk7Z0JBR0UsWUFBWTtzQkFBdkMsWUFBWTt1QkFBQyxZQUFZO2dCQUlqQixTQUFTO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBPbkluaXQsIElucHV0LCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyLCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3RjQmdDb2xvcl0nXG59KVxuZXhwb3J0IGNsYXNzIEJnQ29sb3JEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBIb3N0QmluZGluZygnY2xhc3MnKSBnZXQgY2xhc3MoKSB7XG4gICAgcmV0dXJuICdjdXN0b20tYmctY29sb3InO1xuICB9O1xuICBASG9zdEJpbmRpbmcoJ3N0eWxlLmJhY2tncm91bmQnKSBnZXQgZ2V0U3R5bGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuY3VycmVudEJnO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignbW91c2VlbnRlcicpIG9uTW91c2VFbnRlcigpIHtcbiAgICB0aGlzLmN1cnJlbnRCZyA9IHRoaXMuaG92ZXJlZEJnO1xuICB9XG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlbGVhdmUnKSBvbk1vdXNlTGVhdmUoKSB7XG4gICAgdGhpcy5jdXJyZW50QmcgPSB0aGlzLmRlZmF1bHRCZztcbiAgfVxuXG4gIEBJbnB1dCgpIHRjQmdDb2xvcjogc3RyaW5nIHwgc3RyaW5nW107XG5cbiAgY3VycmVudEJnOiBzdHJpbmc7XG4gIGRlZmF1bHRCZzogc3RyaW5nO1xuICBob3ZlcmVkQmc6IHN0cmluZztcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnNldENvbG9ycygpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoKSB7XG4gICAgdGhpcy5zZXRDb2xvcnMoKTtcbiAgfVxuXG4gIHNldENvbG9ycygpIHtcbiAgICBjb25zdCBCR19DT0xPUiA9IHRoaXMudGNCZ0NvbG9yO1xuXG4gICAgaWYgKCFCR19DT0xPUikgcmV0dXJuIG51bGw7XG5cbiAgICB0aGlzLmRlZmF1bHRCZyA9ICh0eXBlb2YgQkdfQ09MT1IgPT09ICdzdHJpbmcnKSA/IEJHX0NPTE9SOiBCR19DT0xPUlswXTtcbiAgICB0aGlzLmhvdmVyZWRCZyA9ICh0eXBlb2YgQkdfQ09MT1IgPT09ICdzdHJpbmcnKSA/IEJHX0NPTE9SOiBCR19DT0xPUlsxXTtcbiAgICB0aGlzLmN1cnJlbnRCZyA9IHRoaXMuZGVmYXVsdEJnO1xuICB9XG59XG4iXX0=