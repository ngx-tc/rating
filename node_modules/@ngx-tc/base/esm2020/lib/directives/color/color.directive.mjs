import { Directive, Input, HostBinding, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
export class ColorDirective {
    get class() {
        return 'custom-color';
    }
    ;
    get getStyle() {
        return this.currentColor;
    }
    onMouseEnter() {
        this.currentColor = this.hoveredColor;
    }
    onMouseLeave() {
        this.currentColor = this.defaultColor;
    }
    ngOnInit() {
        this.setColors();
    }
    ngOnChanges() {
        this.setColors();
    }
    setColors() {
        const COLOR = this.tcColor;
        if (!COLOR)
            return null;
        this.defaultColor = (typeof COLOR === 'string') ? COLOR : COLOR[0];
        this.hoveredColor = (typeof COLOR === 'string') ? COLOR : COLOR[1];
        this.currentColor = this.defaultColor;
    }
}
ColorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ColorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
ColorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.3", type: ColorDirective, selector: "[tcColor]", inputs: { tcColor: "tcColor" }, host: { listeners: { "mouseenter": "onMouseEnter()", "mouseleave": "onMouseLeave()" }, properties: { "class": "this.class", "style.color": "this.getStyle" } }, usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ColorDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tcColor]'
                }]
        }], propDecorators: { class: [{
                type: HostBinding,
                args: ['class']
            }], getStyle: [{
                type: HostBinding,
                args: ['style.color']
            }], onMouseEnter: [{
                type: HostListener,
                args: ['mouseenter']
            }], onMouseLeave: [{
                type: HostListener,
                args: ['mouseleave']
            }], tcColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRjL2Jhc2Uvc3JjL2xpYi9kaXJlY3RpdmVzL2NvbG9yL2NvbG9yLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFhLE1BQU0sZUFBZSxDQUFDOztBQUsvRixNQUFNLE9BQU8sY0FBYztJQUN6QixJQUEwQixLQUFLO1FBQzdCLE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7SUFBQSxDQUFDO0lBRUYsSUFBZ0MsUUFBUTtRQUN0QyxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUUyQixZQUFZO1FBQ3RDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUN4QyxDQUFDO0lBQzJCLFlBQVk7UUFDdEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3hDLENBQUM7SUFRRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFRCxTQUFTO1FBQ1AsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUUzQixJQUFJLENBQUMsS0FBSztZQUFFLE9BQU8sSUFBSSxDQUFDO1FBRXhCLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFBLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDeEMsQ0FBQzs7MkdBdENVLGNBQWM7K0ZBQWQsY0FBYzsyRkFBZCxjQUFjO2tCQUgxQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO2lCQUN0Qjs4QkFFMkIsS0FBSztzQkFBOUIsV0FBVzt1QkFBQyxPQUFPO2dCQUlZLFFBQVE7c0JBQXZDLFdBQVc7dUJBQUMsYUFBYTtnQkFJRSxZQUFZO3NCQUF2QyxZQUFZO3VCQUFDLFlBQVk7Z0JBR0UsWUFBWTtzQkFBdkMsWUFBWTt1QkFBQyxZQUFZO2dCQUlqQixPQUFPO3NCQUFmLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIE9uSW5pdCwgSW5wdXQsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbdGNDb2xvcl0nXG59KVxuZXhwb3J0IGNsYXNzIENvbG9yRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzJykgZ2V0IGNsYXNzKCkge1xuICAgIHJldHVybiAnY3VzdG9tLWNvbG9yJztcbiAgfTtcblxuICBASG9zdEJpbmRpbmcoJ3N0eWxlLmNvbG9yJykgZ2V0IGdldFN0eWxlKCkge1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnRDb2xvcjtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlZW50ZXInKSBvbk1vdXNlRW50ZXIoKSB7XG4gICAgdGhpcy5jdXJyZW50Q29sb3IgPSB0aGlzLmhvdmVyZWRDb2xvcjtcbiAgfVxuICBASG9zdExpc3RlbmVyKCdtb3VzZWxlYXZlJykgb25Nb3VzZUxlYXZlKCkge1xuICAgIHRoaXMuY3VycmVudENvbG9yID0gdGhpcy5kZWZhdWx0Q29sb3I7XG4gIH1cblxuICBASW5wdXQoKSB0Y0NvbG9yOiBzdHJpbmcgfCBzdHJpbmdbXTtcblxuICBjdXJyZW50Q29sb3I6IHN0cmluZztcbiAgZGVmYXVsdENvbG9yOiBzdHJpbmc7XG4gIGhvdmVyZWRDb2xvcjogc3RyaW5nO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0Q29sb3JzKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLnNldENvbG9ycygpO1xuICB9XG5cbiAgc2V0Q29sb3JzKCkge1xuICAgIGNvbnN0IENPTE9SID0gdGhpcy50Y0NvbG9yO1xuXG4gICAgaWYgKCFDT0xPUikgcmV0dXJuIG51bGw7XG5cbiAgICB0aGlzLmRlZmF1bHRDb2xvciA9ICh0eXBlb2YgQ09MT1IgPT09ICdzdHJpbmcnKSA/IENPTE9SOiBDT0xPUlswXTtcbiAgICB0aGlzLmhvdmVyZWRDb2xvciA9ICh0eXBlb2YgQ09MT1IgPT09ICdzdHJpbmcnKSA/IENPTE9SOiBDT0xPUlsxXTtcbiAgICB0aGlzLmN1cnJlbnRDb2xvciA9IHRoaXMuZGVmYXVsdENvbG9yO1xuICB9XG59XG4iXX0=